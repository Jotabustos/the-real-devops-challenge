version: '3'
services:

  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    image: devops-challenge-flask
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: your_mongodb_password
      MONGODB_HOSTNAME: mongodb
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    build:
      context: data
      dockerfile: Dockerfile
    image: devops-challenge-mongodb
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    networks:
      - backend

networks:
  backend:
    driver: bridge